{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DataLakeGOTEI"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"BalancedBlob_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'BalancedBlob'"
		},
		"CreditCard_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CreditCard'"
		},
		"CreditCardTarget_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CreditCardTarget'"
		},
		"OnlineData_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OnlineData'"
		},
		"Paysim_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Paysim'"
		},
		"TargetBalanced_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TargetBalanced'"
		},
		"TargetOnlineData_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TargetOnlineData'"
		},
		"TargetPaysim_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TargetPaysim'"
		},
		"TransformOnlineFraud_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'TransformOnlineFraud'"
		},
		"SQLDB_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SQLDB'"
		},
		"OnlineFraud_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'OnlineFraud'"
		},
		"Paysimm_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'Paysimm'"
		},
		"CreditCardd_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'CreditCardd'"
		},
		"SQLDB_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "datalake122.database.windows.net"
		},
		"SQLDB_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "ADFDataTransform"
		},
		"SQLDB_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "GOTEI"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/BalancedBlob')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('BalancedBlob_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreditCard')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('CreditCard_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreditCardTarget')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('CreditCardTarget_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnlineData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('OnlineData_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Paysim')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Paysim_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetBalanced')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('TargetBalanced_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetOnlineData')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('TargetOnlineData_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TargetPaysim')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('TargetPaysim_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/TransformOnlineFraud')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('TransformOnlineFraud_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SQLDB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"server": "[parameters('SQLDB_properties_typeProperties_server')]",
					"database": "[parameters('SQLDB_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('SQLDB_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SQLDB_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnlineFraud')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('OnlineFraud_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnlineFraudDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "OnlineFraud",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TargettOnlineFraud.csv",
						"container": "targetdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "step",
						"type": "String"
					},
					{
						"name": "type",
						"type": "String"
					},
					{
						"name": "amount",
						"type": "String"
					},
					{
						"name": "nameOrig",
						"type": "String"
					},
					{
						"name": "oldbalanceOrg",
						"type": "String"
					},
					{
						"name": "newbalanceOrig",
						"type": "String"
					},
					{
						"name": "nameDest",
						"type": "String"
					},
					{
						"name": "oldbalanceDest",
						"type": "String"
					},
					{
						"name": "newbalanceDest",
						"type": "String"
					},
					{
						"name": "isFraud",
						"type": "String"
					},
					{
						"name": "isFlaggedFraud",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/OnlineFraud')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBOnlineFraud')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "step",
						"type": "int",
						"precision": 10
					},
					{
						"name": "type",
						"type": "varchar"
					},
					{
						"name": "amount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "nameOrig",
						"type": "varchar"
					},
					{
						"name": "oldbalanceOrg",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "newbalanceOrg",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "nameDest",
						"type": "varchar"
					},
					{
						"name": "oldbalanceDest",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "newbalanceDest",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "isFraud",
						"type": "bit"
					},
					{
						"name": "isFlaggedFraud",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "OnlineFraud"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobToSQLDataFlow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "FraudDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:45:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "OnlineFraudSource",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"OnlineFraudBlobSource": {},
									"FrauTable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/OnlineFraudSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OnlineFraudSource')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "OnlineFraudDS",
								"type": "DatasetReference"
							},
							"name": "OnlineFraudBlobSource"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DBOnlineFraud",
								"type": "DatasetReference"
							},
							"name": "FrauTable"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          step as string,",
						"          type as string,",
						"          amount as string,",
						"          nameOrig as string,",
						"          oldbalanceOrg as string,",
						"          newbalanceOrig as string,",
						"          nameDest as string,",
						"          oldbalanceDest as string,",
						"          newbalanceDest as string,",
						"          isFraud as string,",
						"          isFlaggedFraud as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> OnlineFraudBlobSource",
						"OnlineFraudBlobSource sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          step as integer,",
						"          type as string,",
						"          amount as decimal(18,2),",
						"          nameOrig as string,",
						"          oldbalanceOrg as decimal(18,2),",
						"          newbalanceOrg as decimal(18,2),",
						"          nameDest as string,",
						"          oldbalanceDest as decimal(18,2),",
						"          newbalanceDest as decimal(18,2),",
						"          isFraud as boolean,",
						"          isFlaggedFraud as boolean",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          step,",
						"          type,",
						"          amount,",
						"          nameOrig,",
						"          oldbalanceOrg,",
						"          newbalanceOrg = newbalanceOrig,",
						"          nameDest,",
						"          oldbalanceDest,",
						"          newbalanceDest,",
						"          isFraud,",
						"          isFlaggedFraud",
						"     )) ~> FrauTable"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/OnlineFraudDS')]",
				"[concat(variables('factoryId'), '/datasets/DBOnlineFraud')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobtoSQLDBOnlineFraud')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "DF1OnlineFraud",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:45:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "OnlineFraudSource",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"OnlineFraudBlobSource": {},
									"FrauTable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/OnlineFraudSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Paysimm')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('Paysimm_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/PaysimDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "Paysimm",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TargetPaySim.csv",
						"container": "targetdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "step",
						"type": "String"
					},
					{
						"name": "type",
						"type": "String"
					},
					{
						"name": "amount",
						"type": "String"
					},
					{
						"name": "nameOrig",
						"type": "String"
					},
					{
						"name": "oldbalanceOrg",
						"type": "String"
					},
					{
						"name": "newbalanceOrig",
						"type": "String"
					},
					{
						"name": "nameDest",
						"type": "String"
					},
					{
						"name": "oldbalanceDest",
						"type": "String"
					},
					{
						"name": "newbalanceDest",
						"type": "String"
					},
					{
						"name": "isFraud",
						"type": "String"
					},
					{
						"name": "isFlaggedFraud",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/Paysimm')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBPaysim')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "step",
						"type": "int",
						"precision": 10
					},
					{
						"name": "type",
						"type": "varchar"
					},
					{
						"name": "amount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "nameOrig",
						"type": "varchar"
					},
					{
						"name": "oldbalanceOrg",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "newbalanceOrg",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "nameDest",
						"type": "varchar"
					},
					{
						"name": "oldbalanceDest",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "newbalanceDest",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "isFraud",
						"type": "bit"
					},
					{
						"name": "isFlaggedFraud",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "Paysim"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/PaysimSource')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "PaysimDS",
								"type": "DatasetReference"
							},
							"name": "PaysimSourceData"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DBPaysim",
								"type": "DatasetReference"
							},
							"name": "PaysimTable"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          step as string,",
						"          type as string,",
						"          amount as string,",
						"          nameOrig as string,",
						"          oldbalanceOrg as string,",
						"          newbalanceOrig as string,",
						"          nameDest as string,",
						"          oldbalanceDest as string,",
						"          newbalanceDest as string,",
						"          isFraud as string,",
						"          isFlaggedFraud as string",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> PaysimSourceData",
						"PaysimSourceData sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          step as integer,",
						"          type as string,",
						"          amount as decimal(18,2),",
						"          nameOrig as string,",
						"          oldbalanceOrg as decimal(18,2),",
						"          newbalanceOrg as decimal(18,2),",
						"          nameDest as string,",
						"          oldbalanceDest as decimal(18,2),",
						"          newbalanceDest as decimal(18,2),",
						"          isFraud as boolean,",
						"          isFlaggedFraud as boolean",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          step,",
						"          type,",
						"          amount,",
						"          nameOrig,",
						"          oldbalanceOrg,",
						"          newbalanceOrg = newbalanceOrig,",
						"          nameDest,",
						"          oldbalanceDest,",
						"          newbalanceDest,",
						"          isFraud,",
						"          isFlaggedFraud",
						"     )) ~> PaysimTable"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/PaysimDS')]",
				"[concat(variables('factoryId'), '/datasets/DBPaysim')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/BlobtoSQLPS')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "PaysimDataFlow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "0.00:45:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "PaysimSource",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"PaysimSourceData": {},
									"PaysimTable": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/PaysimSource')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreditCardd')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('CreditCardd_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreditCardDS')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CreditCardd",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "TargetCreditCard.csv",
						"container": "targetdata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "Transaction_ID",
						"type": "String"
					},
					{
						"name": "Date",
						"type": "String"
					},
					{
						"name": "Day_of_Week",
						"type": "String"
					},
					{
						"name": "Time",
						"type": "String"
					},
					{
						"name": "Type_of_Card",
						"type": "String"
					},
					{
						"name": "Entry_Mode",
						"type": "String"
					},
					{
						"name": "Amount",
						"type": "String"
					},
					{
						"name": "Type_of_Transaction",
						"type": "String"
					},
					{
						"name": "Merchant_Group",
						"type": "String"
					},
					{
						"name": "Country_of_Transaction",
						"type": "String"
					},
					{
						"name": "Shipping_Address",
						"type": "String"
					},
					{
						"name": "Country_of_Residence",
						"type": "String"
					},
					{
						"name": "Gender",
						"type": "String"
					},
					{
						"name": "Age",
						"type": "String"
					},
					{
						"name": "Bank",
						"type": "String"
					},
					{
						"name": "Fraud",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CreditCardd')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DBCreditCard')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SQLDB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "Transaction_ID",
						"type": "varchar"
					},
					{
						"name": "Date",
						"type": "date"
					},
					{
						"name": "Day_of_Week",
						"type": "varchar"
					},
					{
						"name": "Time",
						"type": "int",
						"precision": 10
					},
					{
						"name": "Type_of_Card",
						"type": "varchar"
					},
					{
						"name": "Entry_Mode",
						"type": "varchar"
					},
					{
						"name": "Amount",
						"type": "decimal",
						"precision": 18,
						"scale": 2
					},
					{
						"name": "Type_of_Transaction",
						"type": "varchar"
					},
					{
						"name": "Merchant",
						"type": "varchar"
					},
					{
						"name": "Country_of_Merchant",
						"type": "varchar"
					},
					{
						"name": "Shipping_Address",
						"type": "varchar"
					},
					{
						"name": "Country_of_Customer",
						"type": "varchar"
					},
					{
						"name": "Gender",
						"type": "char"
					},
					{
						"name": "Age",
						"type": "decimal",
						"precision": 5,
						"scale": 2
					},
					{
						"name": "Bank",
						"type": "varchar"
					},
					{
						"name": "Fraud",
						"type": "bit"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CreditCard"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SQLDB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CreditCradSource')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "CreditCardDS",
								"type": "DatasetReference"
							},
							"name": "CreditcardDF"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "DBCreditCard",
								"type": "DatasetReference"
							},
							"name": "DBCreditCard"
						}
					],
					"transformations": [],
					"scriptLines": [
						"source(output(",
						"          Transaction_ID as string,",
						"          Date as date,",
						"          Day_of_Week as string,",
						"          Time as integer,",
						"          Type_of_Card as string,",
						"          Entry_Mode as string,",
						"          Amount as string,",
						"          Type_of_Transaction as string,",
						"          Merchant_Group as string,",
						"          Country_of_Transaction as string,",
						"          Shipping_Address as string,",
						"          Country_of_Residence as string,",
						"          Gender as string,",
						"          Age as double,",
						"          Bank as string,",
						"          Fraud as integer",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> CreditcardDF",
						"CreditcardDF sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     input(",
						"          Transaction_ID as string,",
						"          Date as date,",
						"          Day_of_Week as string,",
						"          Time as integer,",
						"          Type_of_Card as string,",
						"          Entry_Mode as string,",
						"          Amount as decimal(18,2),",
						"          Type_of_Transaction as string,",
						"          Merchant as string,",
						"          Country_of_Merchant as string,",
						"          Shipping_Address as string,",
						"          Country_of_Customer as string,",
						"          Gender as string,",
						"          Age as decimal(5,2),",
						"          Bank as string,",
						"          Fraud as boolean",
						"     ),",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          Transaction_ID,",
						"          Date,",
						"          Day_of_Week,",
						"          Time,",
						"          Type_of_Card,",
						"          Entry_Mode,",
						"          Type_of_Transaction,",
						"          Shipping_Address,",
						"          Gender,",
						"          Age,",
						"          Bank",
						"     )) ~> DBCreditCard"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/CreditCardDS')]",
				"[concat(variables('factoryId'), '/datasets/DBCreditCard')]"
			]
		}
	]
}